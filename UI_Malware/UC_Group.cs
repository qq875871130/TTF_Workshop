using MetroFramework;
using MySql.Data;
using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Ui_Tip;

namespace TTF_UI
{
    public partial class UC_Group : UserControl
    {
        public UC_Group()
        {
            InitializeComponent();
        }

        //设置数据库参数
        MySqlConnection conn;
        string sql;
        string connectStr = "server= cdb-q6lttdl0.cd.tencentcdb.com; port= 10102 ;user=root ; password = 13117355807cv; database=ttfinfo;";
        //设置列标题风格
        //DataGridViewCellStyle Cellstyle = new DataGridViewCellStyle();

        //MySqlCommand cmd;
        ////设置数据分析器
        //MySqlDataReader dataReader;

        /// <summary>
        /// 数据库连接
        /// </summary>
        public void ConnectSQL()
        {
            conn = new MySqlConnection(connectStr);
            try
            {
                conn.Open();
            }
            catch
            {
                Ui_Tip.Form1.instance.Alert("Connection Failed", Form_Alert.enm_Type.Error);
                OverrideMessagebox msgb = new OverrideMessagebox();
                string title = Form1.instance.LangNow.Trim() == "Chinese_Simplify" ? "警告" : Form1.instance.LangNow.Trim() == "Chinese_Tradition" ? "警告" : Form1.instance.LangNow.Trim() == "English" ? "Alert" : "警告";
                string content = Form1.instance.LangNow.Trim() == "Chinese_Simplify" ? "远程数据库未响应!请稍后再试或先检查网络连接" : Form1.instance.LangNow.Trim() == "Chinese_Tradition" ? "遠程數據庫未響應!請檢查網絡連接或稍後再試" : Form1.instance.LangNow.Trim() == "English" ? "Database is not responding! Please check your network connection or try again later" : "远程数据库未响应!请稍后再试或先检查网络连接";
                msgb.Showmsg(content, title, OverrideMessagebox.MyMsgboxBtns.OK, OverrideMessagebox.MyMsgIcon.Warn,this);
                return;
            }
            Ui_Tip.Form1.instance.Alert("Connected!", Form_Alert.enm_Type.Success);
            DisplayDataByIndex();
        }


        //根据标签页索引不同组别的组员信息
        public void DisplayDataByIndex()
        {
            int Groupindex = metroTabControl.SelectedIndex + 1;
            try
            {
                sql = "SELECT 成员属性,姓名,性别,学院,班级,职位 FROM group_info WHERE 组别 = " + Groupindex.ToString();
                MySqlDataAdapter Adapter = new MySqlDataAdapter(sql, conn);
                DataTable datatb = new DataTable();
                Adapter.Fill(datatb);
                //判断查找出来的表是否有意义，判断组是否存在
                if (datatb.Rows.Count != 0)
                {
                    TabGrid.DataSource = datatb;
                    TabGrid.AutoGenerateColumns = true;

                    //设置表风格
                    //TabGrid.BackgroundColor = Color.FromArgb(25, 25, 25);
                    //Cellstyle.ForeColor = Color.White;
                    //Cellstyle.Alignment = DataGridViewContentAlignment.MiddleCenter;
                    //修改列标题风格，取消手动排序
                    foreach (DataGridViewColumn col in TabGrid.Columns)
                    {
                        //col.HeaderCell.Style = Cellstyle;
                        col.SortMode = DataGridViewColumnSortMode.NotSortable;
                    }


                    Ui_Tip.Form1.instance.Alert((datatb.Rows.Count + 1).ToString()+"-Guys Loaded!",Form_Alert.enm_Type.Info);
                }
                else
                {
                    OverrideMessagebox msgb = new OverrideMessagebox();
                    string title = Form1.instance.LangNow.Trim() == "Chinese_Simplify" ? "错误" : Form1.instance.LangNow.Trim() == "Chinese_Tradition" ? "錯誤" : Form1.instance.LangNow.Trim() == "English" ? "Error" : "错误";
                    string content = Form1.instance.LangNow.Trim() == "Chinese_Simplify" ? "该组不存在！" : Form1.instance.LangNow.Trim() == "Chinese_Tradition" ? "該組不存在！" : Form1.instance.LangNow.Trim() == "English" ? "This Group has never existed!" : "该组不存在！";
                    msgb.Showmsg(content,title, OverrideMessagebox.MyMsgboxBtns.OK, OverrideMessagebox.MyMsgIcon.Error);
                }
            }
            catch
            {
                OverrideMessagebox msgb = new OverrideMessagebox();
                string title = Form1.instance.LangNow.Trim() == "Chinese_Simplify" ? "警告" : Form1.instance.LangNow.Trim() == "Chinese_Tradition" ? "警報" : Form1.instance.LangNow.Trim() == "English" ? "Alert" : "警告";
                string content = Form1.instance.LangNow.Trim() == "Chinese_Simplify" ? "意料之外的异常！" : Form1.instance.LangNow.Trim() == "Chinese_Tradition" ? "意料之外的異常！" : Form1.instance.LangNow.Trim() == "English" ? "Unexpected Error!" : "意料之外的异常！";
                msgb.Showmsg(content, title, OverrideMessagebox.MyMsgboxBtns.OK, OverrideMessagebox.MyMsgIcon.Warn);
            }

        }

        //控件初始化连接数据库
        private void UC_Group_Load(object sender, EventArgs e)
        {
            ConnectSQL();
        }

        //检错函数，3具参(匹配表，匹配关键字，匹配源列标题) : bug,已失效
        //public bool Check(string matchTable, string matchKey, string matchSource)
        //{
        //    try
        //    {
                
        //        string gsql = "select * from "+ matchTable;
        //        cmd = new MySqlCommand(gsql, conn);
        //        dataReader = cmd.ExecuteReader();
        //        while (dataReader.Read())
        //        { 
        //            //匹配成功，返回真，否则假
        //            if ("'2'" == dataReader.GetString("组别"))
        //            {
                        
        //                return true;
        //            }
        //            else
        //                return false;
        //        }
        //        throw new ArgumentNullException();
        //    }
        //    catch
        //    {
        //        MessageBox.Show("检错失败！", "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
        //        throw;
        //    }

        //}


      
        private void metroTabControl_SelectedIndexChanged(object sender, EventArgs e)
        {
            ConnectSQL();
        }
    }
}
